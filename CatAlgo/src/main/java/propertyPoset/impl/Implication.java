package propertyPoset.impl;

import propertyPoset.IImplication;

public class Implication implements IImplication {

	private String antecedent;
	private String consequent;
	
	public Implication(String antecedent, String consequent) {
		this.antecedent = antecedent;
		this.consequent = consequent;
	}

	public String getAntecedent() {
		return antecedent;
	}

	public String getConsequent() {
		return consequent;
	}
	
	/**
	 * Auto-generated by Eclipse. 
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((antecedent == null) ? 0 : antecedent.hashCode());
		result = prime * result + ((consequent == null) ? 0 : consequent.hashCode());
		return result;
	}

	/**
	 * Auto-generated by Eclipse. 
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Implication other = (Implication) obj;
		if (antecedent == null) {
			if (other.antecedent != null)
				return false;
		} else if (!antecedent.equals(other.antecedent))
			return false;
		if (consequent == null) {
			if (other.consequent != null)
				return false;
		} else if (!consequent.equals(other.consequent))
			return false;
		return true;
	}

}
